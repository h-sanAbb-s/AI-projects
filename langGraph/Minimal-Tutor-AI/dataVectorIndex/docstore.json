{"docstore/metadata": {"0a8ffe42-7dc9-4f12-a3fe-bb98a6e67a42": {"doc_hash": "6b71951f89f5cfb53e09011d061c47d1322e0cf26e5104e99078e08809336504"}, "7a9e1cf4-6ebe-4746-870f-4c19ebba7622": {"doc_hash": "7ba334f4698b688db7973172077f06b3c90cb53bd3282e95189505f462b99b4f"}, "b069dd48-da1b-4911-be1e-12b268aa71a6": {"doc_hash": "d27c13c76df24962b1b1f4e76e50845fb26189d362959f64f3f3fdcde426bdf1"}, "78e0f7a7-4682-4b09-877c-9556a832a7ca": {"doc_hash": "4dc8b49302be3f8477f5aedaf0d124739a0a887535e72b26b932bb0e912d28c0"}, "c44edcf5-dfc9-4db8-b7d5-d1cc2950f0b5": {"doc_hash": "27ee022cf80b51df7cc4fe9d3fee71b190b69818c6cf29d486b74517a10e23ce"}, "99266da1-98e6-43cf-826d-ef15db464f16": {"doc_hash": "c41d7adffa6021cc903531735b7eb3c9ad0fadff2c73795cf199ac91d5a17cf3"}, "85fc1ff4-efe7-415b-b3c3-442fc7170662": {"doc_hash": "b42d2271472df30af16b9f79412368b62814b49e6f94afef11dcf9695676b458"}, "d29792e2-2619-452b-97e7-282e9368e7df": {"doc_hash": "f25f2a954745a474f99569a06ea80e9f4eeaa7bcc166ad33eb0379b608391cb7"}, "1c22a98b-8a38-4829-b4d9-5670ef600369": {"doc_hash": "2e281aa8fd612ef199e016265c05fd4bae803d75b459868d22e43568c8b8f706", "ref_doc_id": "0a8ffe42-7dc9-4f12-a3fe-bb98a6e67a42"}, "950a75c2-68fc-4479-b7cc-4061e5db3209": {"doc_hash": "56a96a33c3483f04c805bca2e2ce9219f969470b3347e8b3ef6da3955111a2bb", "ref_doc_id": "0a8ffe42-7dc9-4f12-a3fe-bb98a6e67a42"}, "d5d47873-d792-45d1-9ff1-1d71c2123888": {"doc_hash": "5ac40dab5952ba79f1fe974157ac40b1c8f42b19aa182c7ec9cb3fcda55ad947", "ref_doc_id": "7a9e1cf4-6ebe-4746-870f-4c19ebba7622"}, "b8654cae-5b31-43fa-8a8f-1f569822bf28": {"doc_hash": "e86e5e72cd876444a3fab4ee76d1126197cd6eee48ead18b76c4cbb20fb7b846", "ref_doc_id": "7a9e1cf4-6ebe-4746-870f-4c19ebba7622"}, "cb771808-42f7-4472-b08d-4d712f787a76": {"doc_hash": "0d5a09af31fbef1cb11e7a11093759fc908f7ecd97e5fbefb8d2f58666d78208", "ref_doc_id": "b069dd48-da1b-4911-be1e-12b268aa71a6"}, "cbd6fdf4-8c3c-41e2-a9b3-14f0367c2be6": {"doc_hash": "d5e4b295f2eafea287d2ce33308af178806bb48db66a8f38d07b96a0fadd6684", "ref_doc_id": "b069dd48-da1b-4911-be1e-12b268aa71a6"}, "b61496d8-de5b-4259-b5ae-bfc7c968f8dc": {"doc_hash": "cf4e8be43d1636ac643e162138b0d56cc8c0bafa5d859996a10c668af8d48d55", "ref_doc_id": "78e0f7a7-4682-4b09-877c-9556a832a7ca"}, "cf9df755-a925-49a8-b655-037d47c52ef5": {"doc_hash": "f989925f4e1e54b708147290b80ffe6f0e48e9a0a1d576c68d5eb33942ee81c7", "ref_doc_id": "c44edcf5-dfc9-4db8-b7d5-d1cc2950f0b5"}, "96d67fc8-5880-4b0c-a912-54e7bb2f0ad9": {"doc_hash": "334efb9fa4c65ed3f5680d756d60f50aa832fe947434810fafc87ab311fa6cb9", "ref_doc_id": "c44edcf5-dfc9-4db8-b7d5-d1cc2950f0b5"}, "e55ba469-f27e-4177-9189-2fee5468e101": {"doc_hash": "e08e2c07183e9354a5ec1560ab9b3e928d37dc3536414baac6089cfefebcab7c", "ref_doc_id": "99266da1-98e6-43cf-826d-ef15db464f16"}, "731a08cc-6369-4536-805d-15d9e784418b": {"doc_hash": "d456044d2e1f73fd63de917b221011ac99bced4926eb9e9fea4d3cca81ce133d", "ref_doc_id": "99266da1-98e6-43cf-826d-ef15db464f16"}, "5c15191d-ea9c-4aa8-b3cd-da8cc5981066": {"doc_hash": "3b66111dd4e6e0192c4326d11c42931eb10e5357cc890f9e84e3d61d2a33f14e", "ref_doc_id": "85fc1ff4-efe7-415b-b3c3-442fc7170662"}, "5290682c-f867-4fc1-987c-92db3a44f13c": {"doc_hash": "8fb8efc718c2b6900cf73e7de50381fee5daa45ab2a16717cb5788fe018c4c95", "ref_doc_id": "85fc1ff4-efe7-415b-b3c3-442fc7170662"}, "e1cca96b-1774-40ee-a952-c0704aa544e5": {"doc_hash": "71754bf8e05437131eadceac10cc0d98303ab5e98b531483a2a1574f0c5a042b", "ref_doc_id": "d29792e2-2619-452b-97e7-282e9368e7df"}, "e450aed1-084c-4aaa-9ee3-196d0c0f8804": {"doc_hash": "e198504b2655fc3313e7af55507e395aaf0abd540269d701abad203404f745ed", "ref_doc_id": "d29792e2-2619-452b-97e7-282e9368e7df"}}, "docstore/data": {"1c22a98b-8a38-4829-b4d9-5670ef600369": {"__data__": {"id_": "1c22a98b-8a38-4829-b4d9-5670ef600369", "embedding": null, "metadata": {"page_label": "1", "file_name": "AComparativeStudyofOperatingSystemsCaseof.pdf", "file_path": "C:\\Myfiles\\Github Repositories\\AI-projects\\langGraph\\Minimal-Tutor-AI\\data\\AComparativeStudyofOperatingSystemsCaseof.pdf", "file_type": "application/pdf", "file_size": 455153, "creation_date": "2024-06-30", "last_modified_date": "2024-05-08"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0a8ffe42-7dc9-4f12-a3fe-bb98a6e67a42", "node_type": "4", "metadata": {"page_label": "1", "file_name": "AComparativeStudyofOperatingSystemsCaseof.pdf", "file_path": "C:\\Myfiles\\Github Repositories\\AI-projects\\langGraph\\Minimal-Tutor-AI\\data\\AComparativeStudyofOperatingSystemsCaseof.pdf", "file_type": "application/pdf", "file_size": 455153, "creation_date": "2024-06-30", "last_modified_date": "2024-05-08"}, "hash": "6b71951f89f5cfb53e09011d061c47d1322e0cf26e5104e99078e08809336504", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "950a75c2-68fc-4479-b7cc-4061e5db3209", "node_type": "1", "metadata": {}, "hash": "7c6a51f29be01e5095d1a7ef2021026d2a4e37554d111651908e4addeecced72", "class_name": "RelatedNodeInfo"}}, "text": "International Journal of Computer Applications (0975 \u2013 8887)  \nVolume 176 \u2013 No. 39, July 2020  \n17 A Comparative Study of Operating Systems: Case of \nWindows, UNIX, Linux, Mac, Android and iOS  \nAkinlolu  Adekotujo  \nPhD Student  \nComputer Science Dept ., \nLagos State University,  \nNigeria  \n \n \n Adedoyin  Odumabo  \nPhD Student  \nComputer Science Dept ., \nLagos State University, \nNigeria  \n \n Ademola  Adedokun  \nPhD Student  \nComputer Science Dept ., \nLagos State University, \nNigeria  \n \n \n Olukayode  Aiyeniko  \nLecture II  \nComputer Science Dept ., \nLagos State University, \nNigeria  \nABSTRACT  \nVarieties of operating systems (OS) have emerged over the \nyears having different features and functionalities. \nUnderstanding the functionalities of each OS guides users\u2019 \ndecisions about the OS to install on their computers. In view \nof this , the comparative analysis of different OS  is needed  to \nprovide details on the similarities and difference in recent \ntypes  of OS  vis-\u00e0-vis their strength s and weaknesses.  This \npaper focus on the comparative analysis of  Windows, Unix, \nLinux, Mac, Android and iOS o perating systems based on the \nOS features and the ir strengths  and w eaknesses . A qualitative \nanalysis of six different operating systems and result  showed \nthat Windows 10 had 0.04 malware file present while \nWindows 7 machine was 0.08. Higher percentage of mobile \nmalware target Androids than iOS. Windows 10, Linux, \nUNIX and Mac OS are more secured and reliable. Windows \nand Android are more popular, user -friendly, easy to use and \nallow more application program than Mac OS. Linux and \nAndroid are free while Windows is moderately costly and \nMac OS is very costly. Except for Mac and iOS others allow \ncompatibility. Windows 10 and Mac OS integrated firewall.  \nWindows and Android tend to be the most widely used \nespecially the newest versions. It is because they are  \naffordable, secure, reliable, compatible and user friendly.  This \nstudy helps to provide some guides to both end -users and \ndevelopers guid ing them  in taking decisions about operating \nsystems that are most suitable for them.  \nGeneral Terms  \nOperating System  \nKeywords   \nOperating System, Windows, Linux, Mac, UNIX , Android, \niOS, Comparative Analysis   \n1. INTRODUCTION  \nOperating System  (OS) is software  that manages and controls  \nthe main computer hardware, the hardware peripherals and \nsoftware resources, so also the users.  It also offers  the \nplatform and support  for application programs and acts as an \ninterface between the computer user , programmers inclusive,  \nand the computer ha rdware  [1]. Applications  software like \nword processors, spreadsheets, databases, and other dedicated \napplications that business es need, run on a given OS platform . \nOperating systems  provide standard services for processes \nimplementation such as storage, deadlock, scheduling and \nother processes . It also provides  a programming  environment \nthat enables a user to write and execute programs in a much \nconvenient and efficient way. Every computer system \nincluding desktops, laptops, tablets, supercomputers, hand -held and even video game consoles use some type of \noperating system.  There  are numerous types of  operating \nsystems  in today\u2019s ICT world.  Mac O perating System  \ndesigned and owned by Apple Inc., Windows  by Microsoft \nInc., Linux by Community, likewise Android by Google Inc. \nand others.  \nVarieties of Operating S ystems have emerged over the years \nhaving different features and functionalities. Understanding \nthe functionalities of each OS guides users\u2019 decisions about \nthe OS to install on their computers. In view of this the \ncomparative analysis of different OS becomes inevitable . \nThus the need arises for a comparative analys is that will give \nan overview of the similarities and difference in different \ntypes of OS with the view to presenting and mapping the \nfeatures of the OS with various user services.  \nThis paper presents a comparative study of six (i.e. Windows, \nLinux, Mac, UNIX, Android and iOS) operating systems \nbased on the OS features and their strengths and weaknesses.  \nThe paper is structured as follows: Section 2 presents the \nreview of related works while Section 3 presents the \ncomparative analysis of Windows, UNIX, Linux, Mac, \nAndroid , and  iOS.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 4345, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "950a75c2-68fc-4479-b7cc-4061e5db3209": {"__data__": {"id_": "950a75c2-68fc-4479-b7cc-4061e5db3209", "embedding": null, "metadata": {"page_label": "1", "file_name": "AComparativeStudyofOperatingSystemsCaseof.pdf", "file_path": "C:\\Myfiles\\Github Repositories\\AI-projects\\langGraph\\Minimal-Tutor-AI\\data\\AComparativeStudyofOperatingSystemsCaseof.pdf", "file_type": "application/pdf", "file_size": 455153, "creation_date": "2024-06-30", "last_modified_date": "2024-05-08"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0a8ffe42-7dc9-4f12-a3fe-bb98a6e67a42", "node_type": "4", "metadata": {"page_label": "1", "file_name": "AComparativeStudyofOperatingSystemsCaseof.pdf", "file_path": "C:\\Myfiles\\Github Repositories\\AI-projects\\langGraph\\Minimal-Tutor-AI\\data\\AComparativeStudyofOperatingSystemsCaseof.pdf", "file_type": "application/pdf", "file_size": 455153, "creation_date": "2024-06-30", "last_modified_date": "2024-05-08"}, "hash": "6b71951f89f5cfb53e09011d061c47d1322e0cf26e5104e99078e08809336504", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1c22a98b-8a38-4829-b4d9-5670ef600369", "node_type": "1", "metadata": {"page_label": "1", "file_name": "AComparativeStudyofOperatingSystemsCaseof.pdf", "file_path": "C:\\Myfiles\\Github Repositories\\AI-projects\\langGraph\\Minimal-Tutor-AI\\data\\AComparativeStudyofOperatingSystemsCaseof.pdf", "file_type": "application/pdf", "file_size": 455153, "creation_date": "2024-06-30", "last_modified_date": "2024-05-08"}, "hash": "2e281aa8fd612ef199e016265c05fd4bae803d75b459868d22e43568c8b8f706", "class_name": "RelatedNodeInfo"}}, "text": "and others.  \nVarieties of Operating S ystems have emerged over the years \nhaving different features and functionalities. Understanding \nthe functionalities of each OS guides users\u2019 decisions about \nthe OS to install on their computers. In view of this the \ncomparative analysis of different OS becomes inevitable . \nThus the need arises for a comparative analys is that will give \nan overview of the similarities and difference in different \ntypes of OS with the view to presenting and mapping the \nfeatures of the OS with various user services.  \nThis paper presents a comparative study of six (i.e. Windows, \nLinux, Mac, UNIX, Android and iOS) operating systems \nbased on the OS features and their strengths and weaknesses.  \nThe paper is structured as follows: Section 2 presents the \nreview of related works while Section 3 presents the \ncomparative analysis of Windows, UNIX, Linux, Mac, \nAndroid , and  iOS. Section 4 presents  merits and demerits of \nWindows, UNIX, Linux, Mac, Android, and iOS. Deductions \nare presented in Section 5 and Conclusion is presented in \nSection 6.  \n2. REVIEW  OF RELATED WORKS  \nSeveral research works had been car ried out on operating \nsystems used on desktop computer systems and mobile \ndevices. Summary of the existing works is presented in this \nsection.  \nLin and Ye in [2] investigated the smartphone OSs market in \na uniform ecosystem framework. They compared major \ncompanies like Nokia, RIM, Apple and Microsoft. The result \nshowed that the companies used smartphone OS as a business \nunit and as opportunity for new business. Similarly in [3], the \nauthors compared various operating systems (OSes) for \ndeveloping WSN applications such as TinyOS, Contiki, and \nLiteOS. Several issues were considered amongst which are: \nmemory re quirement, process management and scheduling, \nkernel model, reliability etc. Moreover, features such  as \nNetworking Support, Real -Time Guarantee, Language \nSupport, Multi -Threading Support, File System, Platform \nSupport, and Simulator  for comparison of these  OSes were \ndiscussed. Strengths and weaknesses of the operating systems \nwere equally identified. The significance of this work is that, \nthe OS developers will know what had been done on existing \nOSes, and the OS users will know the various features of", "mimetype": "text/plain", "start_char_idx": 3431, "end_char_idx": 5733, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d5d47873-d792-45d1-9ff1-1d71c2123888": {"__data__": {"id_": "d5d47873-d792-45d1-9ff1-1d71c2123888", "embedding": null, "metadata": {"page_label": "2", "file_name": "AComparativeStudyofOperatingSystemsCaseof.pdf", "file_path": "C:\\Myfiles\\Github Repositories\\AI-projects\\langGraph\\Minimal-Tutor-AI\\data\\AComparativeStudyofOperatingSystemsCaseof.pdf", "file_type": "application/pdf", "file_size": 455153, "creation_date": "2024-06-30", "last_modified_date": "2024-05-08"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "7a9e1cf4-6ebe-4746-870f-4c19ebba7622", "node_type": "4", "metadata": {"page_label": "2", "file_name": "AComparativeStudyofOperatingSystemsCaseof.pdf", "file_path": "C:\\Myfiles\\Github Repositories\\AI-projects\\langGraph\\Minimal-Tutor-AI\\data\\AComparativeStudyofOperatingSystemsCaseof.pdf", "file_type": "application/pdf", "file_size": 455153, "creation_date": "2024-06-30", "last_modified_date": "2024-05-08"}, "hash": "7ba334f4698b688db7973172077f06b3c90cb53bd3282e95189505f462b99b4f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b8654cae-5b31-43fa-8a8f-1f569822bf28", "node_type": "1", "metadata": {}, "hash": "1997a06930d326a79ef29ac7f5f09bea0d8f345cdb22f0a3763cda6844ae7666", "class_name": "RelatedNodeInfo"}}, "text": "International Journal of Computer Applications (0975 \u2013 8887)  \nVolume 176 \u2013 No. 39, July 2020  \n18 existing sensor network OSes, so as to enable them select the \nmost suitable for their application.  \nMudiraj in [4], did comparative study of booting paradigm of \nWindows, Linux and Mac operating system. This \nexperimental study gave an idea about the Booting Process \nsimilarities and difference in these three operating systems. \nThe result of experim ent showed that every operating system \nconsidered have same common POST step processed during \nthe booting process. Mac has its own mechanism such as \nBootROM, which has its own operating system boot loader \ncalled BootX or Boot.efi. It is the only operating system that \ndoes not support any BIOS mechanism while booting it.  \nIn [5], a review of various mobile technologies such as 1G, \n2G and 3G with different mobile OS was carried out. The \nauthors compared Symbian OS, Android OS, BlackBerry OS, \niOS and Windows Phone based on Vendor, Programming \nLanguage and Application Store. The result showed that iOS \nhas more features and require less code. They established that \nandroid and apple are growing faster in the market. Similarly \ncompar ison of two android and iOS was carried out in [6] \nwith emphasis on security. The security features used for \ncomparisons are encryption  approach , memory \nrandomization, data storage format, application sandboxing, \nand built-in antivirus. Result s showed that iOS is more \nsecured than android OS. Also, other security issues about \nusers\u2019 data are identified.  Furthermore, Okediran et. al., did a \ncomparative analysis of different technological platfor ms in \n[7]. The Smartphone  OSs reviewed were Android -Google, \niOS-Apple, Blackberry OS, Windows Phone -Microsoft, web \nOS and Symbian OS -Nokia. The result showed android as the \nmost flexible and dynamic mobile operating system.  \nIn 2014, a user model for OS design based on UX to aid \nproduct designers to find the connection between user \nperception and UX was presented in [8]. The empirical study \nwas done  to compare the dominant OSs in tablets: Windows \n8, iOS 6, and Android 4.2 with the major aspects to establish \nsatisfactory or unsatisfactory UX. The paper used user s\u2019 data, \nsuch as demographic factors, usage frequency, personal \ncharacter, personal aesthetic, and voluntariness of use to \npredict the UX . The results showed that the iOS 6 holds a \nsatisfactory in terms of architectural support and favorable \nbrand image, And roid 4.2 holds a satisfactory in terms of \narchitectural support and functional performance and \nWindows 8 holds a satisfactory in terms of functional \nperformance but the OS is unclear, hard to use, and learn, \ninadequate GUI support which make it unsatisfact ory. Also \n[9] discussed the android architecture, its operating system \nand main features. The work compared Android with different \nOS like iOS (Apple), Blackberry OS (RIM), and Symbian \n(Nokia). From their analysis, they concluded t hat Android is \nbetter than all other operating systems. Conversely, Android  \nis an open source OS, had some limitations such as malware \nattacks like virus, spyware, worms etc.  \nComputer system had been used to achieve several computer \ncrimes which include h acking/cracking, computer viruses, \nnetwork intrusion etc . Recently, digital forensic has been used \nto identify any malicious activity in operating system. The \nresearch reported in [10] explained the fundamentals of \nWindows7 registry and its structure and Ubuntu12 file \nsystem; a comparative analysis of the Windows7 registry and \nUbuntu12 file systems of v arious activities based on auto run \nprogram, recently accessed documents, application settings, \nmalware activity, login & shutdown activity, network \naccessed, and its relations to the digital forensic. The aim of \nthis work was to compare Windows 7 and Ubun tu 12 operating systems in forensic investigation of user activities. \nDigital forensic technique was adopted. Windows 7 operating \nsystem keeps track of information in the registry, which helps \nto discover the kind of activity performed by the user and kind  \nof infection and intruder when analyzed. Ubuntu uses text \nfiles in system configuration which help in investigation of \naction and malicious activity tracking.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 4318, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b8654cae-5b31-43fa-8a8f-1f569822bf28": {"__data__": {"id_": "b8654cae-5b31-43fa-8a8f-1f569822bf28", "embedding": null, "metadata": {"page_label": "2", "file_name": "AComparativeStudyofOperatingSystemsCaseof.pdf", "file_path": "C:\\Myfiles\\Github Repositories\\AI-projects\\langGraph\\Minimal-Tutor-AI\\data\\AComparativeStudyofOperatingSystemsCaseof.pdf", "file_type": "application/pdf", "file_size": 455153, "creation_date": "2024-06-30", "last_modified_date": "2024-05-08"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "7a9e1cf4-6ebe-4746-870f-4c19ebba7622", "node_type": "4", "metadata": {"page_label": "2", "file_name": "AComparativeStudyofOperatingSystemsCaseof.pdf", "file_path": "C:\\Myfiles\\Github Repositories\\AI-projects\\langGraph\\Minimal-Tutor-AI\\data\\AComparativeStudyofOperatingSystemsCaseof.pdf", "file_type": "application/pdf", "file_size": 455153, "creation_date": "2024-06-30", "last_modified_date": "2024-05-08"}, "hash": "7ba334f4698b688db7973172077f06b3c90cb53bd3282e95189505f462b99b4f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d5d47873-d792-45d1-9ff1-1d71c2123888", "node_type": "1", "metadata": {"page_label": "2", "file_name": "AComparativeStudyofOperatingSystemsCaseof.pdf", "file_path": "C:\\Myfiles\\Github Repositories\\AI-projects\\langGraph\\Minimal-Tutor-AI\\data\\AComparativeStudyofOperatingSystemsCaseof.pdf", "file_type": "application/pdf", "file_size": 455153, "creation_date": "2024-06-30", "last_modified_date": "2024-05-08"}, "hash": "5ac40dab5952ba79f1fe974157ac40b1c8f42b19aa182c7ec9cb3fcda55ad947", "class_name": "RelatedNodeInfo"}}, "text": "Recently, digital forensic has been used \nto identify any malicious activity in operating system. The \nresearch reported in [10] explained the fundamentals of \nWindows7 registry and its structure and Ubuntu12 file \nsystem; a comparative analysis of the Windows7 registry and \nUbuntu12 file systems of v arious activities based on auto run \nprogram, recently accessed documents, application settings, \nmalware activity, login & shutdown activity, network \naccessed, and its relations to the digital forensic. The aim of \nthis work was to compare Windows 7 and Ubun tu 12 operating systems in forensic investigation of user activities. \nDigital forensic technique was adopted. Windows 7 operating \nsystem keeps track of information in the registry, which helps \nto discover the kind of activity performed by the user and kind  \nof infection and intruder when analyzed. Ubuntu uses text \nfiles in system configuration which help in investigation of \naction and malicious activity tracking.  \nThe work presented in [11] identified the key factors affecting \nthe choice of OS (Android and iOS) customers, and the \ndemogr aphic  effect on their choice. The analysis showed  that \nage group and applications available in the app store are \nsignificant in influencing the choice of OS. This study \nreveal ed that among smartphone users, Android and iOS are \nhighly preferred.  Android is preferred by customers because \nof its high customized features, user interface and free \navailability apps while iOS is a special mobile operating \nsystem that works only on Apple devices and well known for \nits high security features. It is recom mended that Android \nshould enhance its security features and battery life span; and \niOS should increase its free available apps and develop widget \nsupport. Also i n [12], the authors compared the operating \nsystems of mobile devices such as  Android, iPhone OS, \nBlackBerry, Windows Mobile, Symbian with the following \nfeatures concurrency, memory use network and security. The \nresult showed that each operating system have strengths and \nweaknesses, therefore i t is certainly impossible to say which \noperating system is the best.  Apple placed unnatural \nrestrictions on their iOS devices while the others have no \ndifficulty in running various applications at the same time. \nAndroid is the only free open source operating system. In \nterms of restricted memory capacity, all operating systems \nhave different technologies to deal with it more but \nBlackBerry and Android OS dea ls less with restrictions .  All \noperating systems have restrictions in regard of automatically \nconnecting to Wi -Fi or Bluetooth network but Windows \nMobile and Android 2.0 did not have any restrictions. In term \nof security, BlackBerry and Android OS both ru n applications \nin sandboxed virtual machine but other operating systems had \ncomplications for signing applications. Android and iPhone \nOS are nowadays leading the business market.  \nIn 2019, Enterprise Operating System (EOS) was presented in \n[13]. The goal was to develop a universal EOS (UEOS) \nmodel. The review of the Viable Systems Model (VSM), Le \nMoigne general system theory, the nine level model (NLM) , \nand enterprise engineering (EE) concepts was done and from \nwhich the first elementary functional model of UEOS was \ndeveloped. Three perspectives of active object such as \nfunctional, ontological, evolutionary were identified from Le \nMoigne\u00b4s theory, memor y facilitating the operational and the \nmanagement/decision enterprises subsystems were identified \nfrom the NLM and relevant contributions from GOD theory, \nthe Organizational Self Awareness (OSA) concept, and \nrigorous tools as DEMO were identified from EE . Also, \ncontributions were gotten from complex theories, principally \nthe concept of \u201cbounded instability\u201d and the strategies to \nmaintain a system in \u201cedge of chaos\u201d. Th e research was in its \ninitial phase, therefore there is need for valuable feedback \nfrom re search communities to help evolving the first \nfunctional elementary UEOS model, into a complete and \ncomprehensible one.  \nIn recent years, there were increased in the development of \nInternet of Things (IoT) applications to control remote \nsystems especially in industrial engineering by interlinking a \nlarge number of devices. The core idea of the IoT is to make \navailable a network of physical objects having embedded", "mimetype": "text/plain", "start_char_idx": 3332, "end_char_idx": 7734, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "cb771808-42f7-4472-b08d-4d712f787a76": {"__data__": {"id_": "cb771808-42f7-4472-b08d-4d712f787a76", "embedding": null, "metadata": {"page_label": "3", "file_name": "AComparativeStudyofOperatingSystemsCaseof.pdf", "file_path": "C:\\Myfiles\\Github Repositories\\AI-projects\\langGraph\\Minimal-Tutor-AI\\data\\AComparativeStudyofOperatingSystemsCaseof.pdf", "file_type": "application/pdf", "file_size": 455153, "creation_date": "2024-06-30", "last_modified_date": "2024-05-08"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b069dd48-da1b-4911-be1e-12b268aa71a6", "node_type": "4", "metadata": {"page_label": "3", "file_name": "AComparativeStudyofOperatingSystemsCaseof.pdf", "file_path": "C:\\Myfiles\\Github Repositories\\AI-projects\\langGraph\\Minimal-Tutor-AI\\data\\AComparativeStudyofOperatingSystemsCaseof.pdf", "file_type": "application/pdf", "file_size": 455153, "creation_date": "2024-06-30", "last_modified_date": "2024-05-08"}, "hash": "d27c13c76df24962b1b1f4e76e50845fb26189d362959f64f3f3fdcde426bdf1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "cbd6fdf4-8c3c-41e2-a9b3-14f0367c2be6", "node_type": "1", "metadata": {}, "hash": "b0c4ad3e0e4f215d32841f5ad54d8e74d83be18d63207502a7de228a3364c549", "class_name": "RelatedNodeInfo"}}, "text": "International Journal of Computer Applications (0975 \u2013 8887)  \nVolume 176 \u2013 No. 39, July 2020  \n19 technology accessible through the Internet. This technology \npermits these objects to collect an d transmit data between \ndiverse nodes. The authors in [14] proposed a new \nautonomous IoT model predictive controller that  uses low -\ncost hardware and free software for a class of linear multi -\nagent system even when network is imperfect. It goal is to \nimprove the network service quality in the industrial field. \nThis method is applied to a mobile robot over embedded \nleader \u2013followers wireless networked architecture using \nInternet of Things Operating System running on STM32 and \nradio frequency communication shields over the User \nDatagram Protocol. To implement the enactment of the \npredictive control algorithm, the User Datagram Pr otocol was \nused because of the high number of packet losses in the \ncommunication network. Therefore, analysis of Internet of \nThings technology among agents was carried out joined with \na network predictive control scheme against packet loss, \nlimited bandwid th and attack links. The Experimental results \nshowed the effectiveness of this method in perturbation \nattenuation, reference tracking, and security link even in the \ncase of imperfect network.  The proposed experiment solved \nthe problem of data losses in the  communication network. Also, it improved the quality of monitoring capability in the \ndiverse wireless network settings for remote control \nautomation systems.  \n3. COMPARATIVE ANALYSIS OF \nWINDOWS, UNIX, LINUX, MAC, \nANDROID,  AND IOS  \nIn this paper , emphasis is to carry out a comparative study of \nthe following operating systems: Windows, UNIX, Linux, \nMac, Android and iOS. Issues of concern are: Computer \nArchitecture Supported, Target System Type, File System \nSupported, User Friendly for Lay Users, In tegrated Firewall, \nSecurity Threats, Shell Terminal, Kernel Type, Reliability,  \nand Compatibility. Also, the advantages and limitation s of \neach of the operating systems  were listed . The comparison of \nthe operating systems based on features and functionalit ies is \npresented in Table 1.  \n \n \n \nTable 1. Quality Comparison of Windows, UNIX, Linux, Mac, Android and iOS based on Features and Functionalities  \n \n Windows  Linux  Mac  UNIX  Android  iOS \nManufacturer  Microsoft Inc.  Linux is developed as \nopen source OS under \nthe GNU project by \nthe Originator, Linus \nTorvalds and many \nothers.  Apple Inc.  \nfor their \nMacintosh \nline of \ncomputer \nsystems.  Three biggest \ndistributions are Solaris \nrunning (Oracle), \nAIXon  (IBM) & HP -\nUX Hewlett Packard. \nAnd Apple Make s \nOSX, an Unix based \nOS Open source \nOS designed \n&developed \nby Android \nInc. Google is \nnow the \ncurrent owner  Apple Inc. \nclosed, with \ncomponents \nthat are \nsource openly  \nDevelopment \nand \nDistribution  Developed and \ndistributed by \nMicrosoft.  Linux is Open \nSourced  and  \ndistributed by various \nvendors.  Mac OS was \ndesigned \nonly to be \ndeployed by \nApple \nComputers.  Unix system has \nvarious flavors, most of \nwhich are developed by \nAT&T with other \ncommercial vendors \nand non -profit orgs.   OHA ( Open \nHandset \nAlliance)  Apple Inc . \ndeveloped \nand \ndistributed \niOS \nComputer \nArchitecture \nSupported  x86, x86 -64 x86, x86 -64, \nPowerPC, SPARC, \nAlpha, Others  68k, \nPowerPC  Available on PA -RISC \nand Itanium machines. \nSolaris also available \nfor x86/x64 based \nsystems. OSX is \nPowerPC(10.0 -\n10.5)/x86(10.4)/x64 \n(10.5 -10.8)  Android -x86 \npowered by \nAMD  and \nIntelx86 \nprocessors.  ARM  \nTarget \nSystem Type  Workstation, \nPersonal Computer, \nMedia Centre, \nTablet PC, \nEmbedded.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 3685, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "cbd6fdf4-8c3c-41e2-a9b3-14f0367c2be6": {"__data__": {"id_": "cbd6fdf4-8c3c-41e2-a9b3-14f0367c2be6", "embedding": null, "metadata": {"page_label": "3", "file_name": "AComparativeStudyofOperatingSystemsCaseof.pdf", "file_path": "C:\\Myfiles\\Github Repositories\\AI-projects\\langGraph\\Minimal-Tutor-AI\\data\\AComparativeStudyofOperatingSystemsCaseof.pdf", "file_type": "application/pdf", "file_size": 455153, "creation_date": "2024-06-30", "last_modified_date": "2024-05-08"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b069dd48-da1b-4911-be1e-12b268aa71a6", "node_type": "4", "metadata": {"page_label": "3", "file_name": "AComparativeStudyofOperatingSystemsCaseof.pdf", "file_path": "C:\\Myfiles\\Github Repositories\\AI-projects\\langGraph\\Minimal-Tutor-AI\\data\\AComparativeStudyofOperatingSystemsCaseof.pdf", "file_type": "application/pdf", "file_size": 455153, "creation_date": "2024-06-30", "last_modified_date": "2024-05-08"}, "hash": "d27c13c76df24962b1b1f4e76e50845fb26189d362959f64f3f3fdcde426bdf1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "cb771808-42f7-4472-b08d-4d712f787a76", "node_type": "1", "metadata": {"page_label": "3", "file_name": "AComparativeStudyofOperatingSystemsCaseof.pdf", "file_path": "C:\\Myfiles\\Github Repositories\\AI-projects\\langGraph\\Minimal-Tutor-AI\\data\\AComparativeStudyofOperatingSystemsCaseof.pdf", "file_type": "application/pdf", "file_size": 455153, "creation_date": "2024-06-30", "last_modified_date": "2024-05-08"}, "hash": "0d5a09af31fbef1cb11e7a11093759fc908f7ecd97e5fbefb8d2f58666d78208", "class_name": "RelatedNodeInfo"}}, "text": "OHA ( Open \nHandset \nAlliance)  Apple Inc . \ndeveloped \nand \ndistributed \niOS \nComputer \nArchitecture \nSupported  x86, x86 -64 x86, x86 -64, \nPowerPC, SPARC, \nAlpha, Others  68k, \nPowerPC  Available on PA -RISC \nand Itanium machines. \nSolaris also available \nfor x86/x64 based \nsystems. OSX is \nPowerPC(10.0 -\n10.5)/x86(10.4)/x64 \n(10.5 -10.8)  Android -x86 \npowered by \nAMD  and \nIntelx86 \nprocessors.  ARM  \nTarget \nSystem Type  Workstation, \nPersonal Computer, \nMedia Centre, \nTablet PC, \nEmbedded.  Desktop/Server \nDepends on \nDistribution  Workstation, \nPersonal \nComputer, \nembedded  8086 UNIX system, \nPDP-11/70 system  Consumer, \nEnterprise, \neducation  Smartpho ne, \nmusic system \nplayer , Tablet \nsystem/ \ncomputer  \nFile System \nSupported  NTFS, FAT & \nexFAT with ISO \n9660; UDF, 3rd \nParty driver that \nsupports file system \next2, and ext3, \nReiserFS, and HFS  ext2, ext3, \nex4,ReiserFS,FAT, \nISO 9660,UDF, NFS, \nand others.  HFS+, HFS, \nMFS (Mac \nOS 8.0 and \nbefore) AFP, \nwith ISO \n9660, FAT, \nUDF  jfs, gpfs, hfs, hfs+, ufs, \nxfs, zfs format  Ext4  HFS+, FTP \nUser Friendly \nfor Lay Users  Very User Friendly  Depends on \nDistribution. More \nfriendlier to users Very User \nFriendly  Unix is user -friendly. \nIt's just choosy about Very User \nFriendly  Very User \nFriendly", "mimetype": "text/plain", "start_char_idx": 3184, "end_char_idx": 4470, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b61496d8-de5b-4259-b5ae-bfc7c968f8dc": {"__data__": {"id_": "b61496d8-de5b-4259-b5ae-bfc7c968f8dc", "embedding": null, "metadata": {"page_label": "4", "file_name": "AComparativeStudyofOperatingSystemsCaseof.pdf", "file_path": "C:\\Myfiles\\Github Repositories\\AI-projects\\langGraph\\Minimal-Tutor-AI\\data\\AComparativeStudyofOperatingSystemsCaseof.pdf", "file_type": "application/pdf", "file_size": 455153, "creation_date": "2024-06-30", "last_modified_date": "2024-05-08"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "78e0f7a7-4682-4b09-877c-9556a832a7ca", "node_type": "4", "metadata": {"page_label": "4", "file_name": "AComparativeStudyofOperatingSystemsCaseof.pdf", "file_path": "C:\\Myfiles\\Github Repositories\\AI-projects\\langGraph\\Minimal-Tutor-AI\\data\\AComparativeStudyofOperatingSystemsCaseof.pdf", "file_type": "application/pdf", "file_size": 455153, "creation_date": "2024-06-30", "last_modified_date": "2024-05-08"}, "hash": "4dc8b49302be3f8477f5aedaf0d124739a0a887535e72b26b932bb0e912d28c0", "class_name": "RelatedNodeInfo"}}, "text": "International Journal of Computer Applications (0975 \u2013 8887)  \nVolume 176 \u2013 No. 39, July 2020  \n20 than Unix  who its friends are  \nIntegrated \nFirewall  Windows Firewall  Chroot  capability -\nbased security, [s 5] \nseccomp, SELinux  Application \nFirewall  IPFilter  iptables  Firewall -IP \nfor iOS  \nSecurity \nThreats  Huge  Negligible  Negligible  Mild  Negligible  Negligible  \nShell \nTerminal  CMD  Bash shell powerful \nshell with many \nfeatures  BASH  Originally the Bourne \nShell. Now it's \ncompatible with many \nothers including BASH, \nKorn & C.  Mosh  Blink Shell  \nKernel Type  Hybrid  Monolithic with \nmodules  Monolithic \nwith \nmodules  Monolithic with \nmodules  Linux kernel  XNU  kernel \nof Darwin  \nReliability  Great  Great  Greatest  Greater  Could be \nunstable  More than \nAndroid  \nCompatibility  Can coexist on local \nnetworks with \nWindows, BSD, \nMacs, and other \nUnix -like systems. \nMore compatible.  Linux has few \nprograms and games \nlike Windows. But is \nmore compatible and \nscalable than Unix  Only few \nprograms \nwill run on \nMac Unix does not have as \nmany programs and \ngames as Windows  Better than \niOS Comp atibility \nis fair", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1158, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "cf9df755-a925-49a8-b655-037d47c52ef5": {"__data__": {"id_": "cf9df755-a925-49a8-b655-037d47c52ef5", "embedding": null, "metadata": {"page_label": "5", "file_name": "AComparativeStudyofOperatingSystemsCaseof.pdf", "file_path": "C:\\Myfiles\\Github Repositories\\AI-projects\\langGraph\\Minimal-Tutor-AI\\data\\AComparativeStudyofOperatingSystemsCaseof.pdf", "file_type": "application/pdf", "file_size": 455153, "creation_date": "2024-06-30", "last_modified_date": "2024-05-08"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c44edcf5-dfc9-4db8-b7d5-d1cc2950f0b5", "node_type": "4", "metadata": {"page_label": "5", "file_name": "AComparativeStudyofOperatingSystemsCaseof.pdf", "file_path": "C:\\Myfiles\\Github Repositories\\AI-projects\\langGraph\\Minimal-Tutor-AI\\data\\AComparativeStudyofOperatingSystemsCaseof.pdf", "file_type": "application/pdf", "file_size": 455153, "creation_date": "2024-06-30", "last_modified_date": "2024-05-08"}, "hash": "27ee022cf80b51df7cc4fe9d3fee71b190b69818c6cf29d486b74517a10e23ce", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "96d67fc8-5880-4b0c-a912-54e7bb2f0ad9", "node_type": "1", "metadata": {}, "hash": "82dac81c98ffb431e9656c5c6d4394237bef3a64d943ef721e0bf6034ad16709", "class_name": "RelatedNodeInfo"}}, "text": "International Journal of Computer Applications (0975 \u2013 8887)  \nVolume 176 \u2013 No. 39, July 2020  \n21 4. MERITS AND DEMERITS OF THE \nOPERATING  SYSTEMS: WINDOWS, \nUNIX, LINUX, MAC, ANDROID,  \nAND IOS  \n4.1 Windows Operating System  \nWindows Operating System was introduced into the market in \nthe year 1985, and as a robust and comprehensive kind of \nsoftware, has almost 90% market share over and above other \noperating system  [15]. With its great and dominance presence \nin commercial buildings, industrial facilities, as well as its \nobvious presence as home computers. A lthough this assertion \nis believed not to be so again as a result of overwhelming \npeoples interest in open source operating systems.  \nThe Microsoft Operating System as a f amily of Microsoft  \nwindows was created as a graphical layer over that of old MS \ndos with its root from MS DOS Command line and this it \nretains till date with DOS Box command prompt that  is \ncmd.exe.  [16]. Original Windows NT core happens to be the \nfirst to take shape in OS/2 operating system upon which \nmodern versions are dependent. 32 and 64 -bit AMD and Intel \nsystems accommodate Windows OS, DEC Alpha, PowerPC \narchitectures Windows OS, and MIPS is also comf ortable \nwith recent versions, likewise low and mid -range servers . \nDatabase and web servers also allows Windows operating \nsystem to use them.  In recent years, Microsoft has proofed \nsignificant with marketing and with its finance to establish \nthat Windows in teroperability is not in doubt and  that it has \nall that it takes as a platform to run any enterprise application.  \n4.1.1 Merits of Windows OS  \ni. Technical/ Maintenance  support : Support is made \navailable either online or offline because of its \ngeneral acceptability by so many users . \nii. Compatibility: Windows accommodates almost \nevery applications, game works and different types \nof drivers.  \niii. Enormous quantity of functions: Getting use to \nWindows, one would realize that there are many \nfunctions one can do alm ost anything quite easily \nwith when call up.  \n4.1.2 Demerits of Windows OS  \ni. Viruses: Need to purchase an antivirus programs \nthat needs to be activated frequently, and this can be \ndone on Auto or Manual mode, although free \nantivirus exist but with limitations . \nii. Slow: Windows operating system, particularly Vista \nand Windows 7 needs a lot of system resources like \nregisters, cache, main memory, processor, disk \nspace, and this makes the system runs slower.  \niii. Price: The cost of purchasing Windows operating \nsystem is h igh and very few users can afford it and \nthis necessitate cracking and makes pirated software \nversion available.  \n4.2 UNIX Operating System  \nUNIX happens to be one of the very few oldest of all \noperating system in recent time of ICT world that is still \ngenerally and widely used and available till date, as none \nconspicuous operating system but its somehow secret in its \noperation and interface de sign, it is primarily designed for the \nuse by very large enterprise computing systems. It happens to be one of the common operating system that is run by servers \nand other computers that form the large bulk of the Internet .  \nOne might never use UNIX on loc al PC, but indirect use is \nobvious in one form or another, every time one log on to the \ninternet . Very few users runs UNIX on their personal systems, \nand a lot of different versions of UNIX operating system are \navailable for UNIX PC, and one of such is \u201cUN IXy\u201d which so \nmany users have installed on desktop machines . There are so \nany different types and features basic UNIX interface; Linux, \nwith its different version turn out to be the most common and \npopular for personal computer platform.  \nSetting up a UNIX  OS can be difficult and it requires some \nknowledge to operate, but it is stable and robust, and efficient \nwith system resources.  UNIX OS uses the \"UNIX file \nsystem\". However, most file systems used  by UNIX OS are \nimpartially similar, but different uniquel y from of other \noperating systems file  systems, such as DOS or Windows.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 4089, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "96d67fc8-5880-4b0c-a912-54e7bb2f0ad9": {"__data__": {"id_": "96d67fc8-5880-4b0c-a912-54e7bb2f0ad9", "embedding": null, "metadata": {"page_label": "5", "file_name": "AComparativeStudyofOperatingSystemsCaseof.pdf", "file_path": "C:\\Myfiles\\Github Repositories\\AI-projects\\langGraph\\Minimal-Tutor-AI\\data\\AComparativeStudyofOperatingSystemsCaseof.pdf", "file_type": "application/pdf", "file_size": 455153, "creation_date": "2024-06-30", "last_modified_date": "2024-05-08"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c44edcf5-dfc9-4db8-b7d5-d1cc2950f0b5", "node_type": "4", "metadata": {"page_label": "5", "file_name": "AComparativeStudyofOperatingSystemsCaseof.pdf", "file_path": "C:\\Myfiles\\Github Repositories\\AI-projects\\langGraph\\Minimal-Tutor-AI\\data\\AComparativeStudyofOperatingSystemsCaseof.pdf", "file_type": "application/pdf", "file_size": 455153, "creation_date": "2024-06-30", "last_modified_date": "2024-05-08"}, "hash": "27ee022cf80b51df7cc4fe9d3fee71b190b69818c6cf29d486b74517a10e23ce", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "cf9df755-a925-49a8-b655-037d47c52ef5", "node_type": "1", "metadata": {"page_label": "5", "file_name": "AComparativeStudyofOperatingSystemsCaseof.pdf", "file_path": "C:\\Myfiles\\Github Repositories\\AI-projects\\langGraph\\Minimal-Tutor-AI\\data\\AComparativeStudyofOperatingSystemsCaseof.pdf", "file_type": "application/pdf", "file_size": 455153, "creation_date": "2024-06-30", "last_modified_date": "2024-05-08"}, "hash": "f989925f4e1e54b708147290b80ffe6f0e48e9a0a1d576c68d5eb33942ee81c7", "class_name": "RelatedNodeInfo"}}, "text": "Very few users runs UNIX on their personal systems, \nand a lot of different versions of UNIX operating system are \navailable for UNIX PC, and one of such is \u201cUN IXy\u201d which so \nmany users have installed on desktop machines . There are so \nany different types and features basic UNIX interface; Linux, \nwith its different version turn out to be the most common and \npopular for personal computer platform.  \nSetting up a UNIX  OS can be difficult and it requires some \nknowledge to operate, but it is stable and robust, and efficient \nwith system resources.  UNIX OS uses the \"UNIX file \nsystem\". However, most file systems used  by UNIX OS are \nimpartially similar, but different uniquel y from of other \noperating systems file  systems, such as DOS or Windows.  \nThe trademark UNIX\u00ae is been owned by the Open Group, \nOnly PCs fully compliant with and certified to the Single \nUNIX Specification qualify as \"UNIXR\", others are referred \nto or known as  \"Unix system -like\" or \"Unix -like\".  \nBetween later and early part of 1970 and 1980 respectively, \nUNIXs way  in academic circles led to large scale acceptance  \nof UNIX by  commercial businesses, the most prominent of \nwhich is Sun Microsystems.  Additional  to ce rtified UNIX \ncomputer systems, today Operating system like that of UNIX \nsuch example likes  BSD products and Linux are regularly \ncome across. UNIX with is pros and cons and besides being a \nfree system, are found as to run on most machine  [17]. \n4.2.1 Merits  of UNIX  \nUNIX provides more control by the user. Some OS like \nWindows and Mac are based on icon and mouse making them \nmore user friendly, user can also activate what the operating \nsystem allows. On UNIX, user has no limitation as anything \ncan be done in as much as the operating system offers it.  \nWhat it means is that user can work freely without the fear of \nthinking that the system can be messed up even when the user \ndoes not know what he/she is doing. UNIX also can offer both \nfreedom and danger because the operating sy stem can be \nchanged and make more compatible with what one want to \ndo. If one knows what it takes to work perfectly well with \nUNIX, the operating system can be so powerful that it can be \ncustomized, and because it has been in used for a long time, \nmost bug s have been cleared and this fact makes it very \nreliable.  \n4.2.2 Demerits of UNIX  \nSuccessfully usage of UNIX  requires that an expert will be \nneeded on site. Simple installation of new products and \nupdates  may be difficult if one is not a UNIX expert. \nIntera cting with UNIX system using its command process is \ndifficult , more difficult for a novice, this is why UNIX is most \nused by sophisticated users . UNIX operating system is a \ncustomizable OS, different dialects and language s of UNIX \nare available in versions . \nFor example,  there was a time Berkley UNIX group were not \ncomfortable with how UNIX classifies users, they had to \nchange the operating system code. Therefore, an expert UNIX \nuser at a domain might face a serious learning curve challenge \nat another domain  or location.  \n4.3 Linux Operating  System  \nThe GNU\u2019s answer to MAC and also Windows is Linux. Yes, \nwhat this means is that Linux is a FREE OS, one can perform", "mimetype": "text/plain", "start_char_idx": 3329, "end_char_idx": 6566, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e55ba469-f27e-4177-9189-2fee5468e101": {"__data__": {"id_": "e55ba469-f27e-4177-9189-2fee5468e101", "embedding": null, "metadata": {"page_label": "6", "file_name": "AComparativeStudyofOperatingSystemsCaseof.pdf", "file_path": "C:\\Myfiles\\Github Repositories\\AI-projects\\langGraph\\Minimal-Tutor-AI\\data\\AComparativeStudyofOperatingSystemsCaseof.pdf", "file_type": "application/pdf", "file_size": 455153, "creation_date": "2024-06-30", "last_modified_date": "2024-05-08"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "99266da1-98e6-43cf-826d-ef15db464f16", "node_type": "4", "metadata": {"page_label": "6", "file_name": "AComparativeStudyofOperatingSystemsCaseof.pdf", "file_path": "C:\\Myfiles\\Github Repositories\\AI-projects\\langGraph\\Minimal-Tutor-AI\\data\\AComparativeStudyofOperatingSystemsCaseof.pdf", "file_type": "application/pdf", "file_size": 455153, "creation_date": "2024-06-30", "last_modified_date": "2024-05-08"}, "hash": "c41d7adffa6021cc903531735b7eb3c9ad0fadff2c73795cf199ac91d5a17cf3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "731a08cc-6369-4536-805d-15d9e784418b", "node_type": "1", "metadata": {}, "hash": "640a83f8d6ba5376ed94fb96c8615b1d13268542e0b43e764e893311e03c818c", "class_name": "RelatedNodeInfo"}}, "text": "International Journal of Computer Applications (0975 \u2013 8887)  \nVolume 176 \u2013 No. 39, July 2020  \n22 downloads, modification and also redistribution without any \ncost. Linux is relatively new in the operating system realm. It \nwas written in the year 1991, and also enhanced for current \nusage.  \nLinux and Windows can be compared  to an entity that its \nfloor and roof are either replaceable or not. However, with \nLinux, as an entity, both floor and roof can b e moved in any \nmanner as one want, but Windows floor and roof are very \nrigid that it remains immovable. One cannot go beyond what \nMicrosoft has designed  [16, 18]. \nLinux, designed by Linus Torvalds in the year 1991, heads a \ngroup of fresh school open source Unix\u2019s  that came to be in \nthe year 1990, it also include FreeBSD, NetBSD, OpenBSD, \nand Darvin. All these is a representation of a design direction \nthat the whole group agreed upon.  Linux code is totally \ndifferent compared to the original UNIX source tree code, \nhowever, it uses UNIX standards to behave like a UNIX.  \nDevelopers in Linux open source community have desires to \nacquire a substantial share of end -user desktops making \nLinux's intended users to increase in number than the users of \nthe old -school Uni x\u2019s, who  have fear share desire in the server \nand workstation market. The aspiration to reach end users \nmade Linux developers much more concerned with ease of \ninstallation and in resolving software distribution issues  as it \nwas more difficult with UNIX as proprietary systems, \napplications in Linux are forced to display high degree of \nruggedness than their colleagues  with proprietary UNIX \nstatus.  \n4.3.1 Merits of Linux OS  \ni. Price: Linux is F -R-E-E. It can be downloaded, \ninstalled, used, modified without incurr ing any cost.  \nii. Variety: Linux is nowhere a complete OS but a \nkernel. The fact that it is a kernel, it requires \nadditional ad -ins in form of software. Many of these \nkinds of distributions or distros exist.  \niii. Virus: The fact that it is open sourced, it is less \nvulnerable compared with Mac, it does not mean \nthat it\u2019s free from virus attack . \n4.3.2 Demerits of Linux OS  \ni. Complicated: A good deal of Computer skills are \nrequired to use Linux distros even when some of \nthem are quite easy to use.  \ni. Compatibility: Although Linux has a few percent of \nthe market share like Mac, however, it does not \nhave many programs and games like that of \nWindows.  \nii. Vendors: Linux has very few vendors selling Linux \ncomputers, if one needs Linux computer, then it \nmight be that one will need to purchase Windows \ncomputer, reformat the hard drive, and then install \nLinux on it.  \n4.4 Macintosh Operatin g System  (MAC \nOS) \nMac OS is much older than Windows OS. It was released one \nyear earlier its Microsof t counterpart, and it happens to be the \nfirst among other OS, ever successful graphical -inclined OS.  \nMac OS has undergone basically, two important design \ntransitions, and is on its third stage. The first transition was from supporting only a single applica tion at one time to the \nability to cooperatively multitask multiple applications \n(MultiFinder); the second was the transition from 68000 to \nPowerPC processors, the third was the coming together of \nMac OS design ideas with a Unix -derived infrastructure in \nMac OS X.  \nMac OS  has very high unifying idea significantly different \nfrom that of Unix\u2019s, this is the Mac Interface Guidelines. \nThese explain a great detail of what an Apps Graphical User \nInterface is supposed to depict with its expected behavior. \nOne major idea the Mac Interface Guidelines is that \neverything should stay where they are kept . \nMac operating system apps is termed not huge monoliths. The \nsystem's graphic us er interface (GUI) support program \ninstructions or codes, which is partly implemented in a ROM \nconveyed with the hardware and partly implemented in shared \nlibraries, communicates easily with Mac OS software \nprograms through a quite stable event interface. Hence, the \noperating system design encourages a distinct and clean \nseparation between GUI interface and application engine.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 4150, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "731a08cc-6369-4536-805d-15d9e784418b": {"__data__": {"id_": "731a08cc-6369-4536-805d-15d9e784418b", "embedding": null, "metadata": {"page_label": "6", "file_name": "AComparativeStudyofOperatingSystemsCaseof.pdf", "file_path": "C:\\Myfiles\\Github Repositories\\AI-projects\\langGraph\\Minimal-Tutor-AI\\data\\AComparativeStudyofOperatingSystemsCaseof.pdf", "file_type": "application/pdf", "file_size": 455153, "creation_date": "2024-06-30", "last_modified_date": "2024-05-08"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "99266da1-98e6-43cf-826d-ef15db464f16", "node_type": "4", "metadata": {"page_label": "6", "file_name": "AComparativeStudyofOperatingSystemsCaseof.pdf", "file_path": "C:\\Myfiles\\Github Repositories\\AI-projects\\langGraph\\Minimal-Tutor-AI\\data\\AComparativeStudyofOperatingSystemsCaseof.pdf", "file_type": "application/pdf", "file_size": 455153, "creation_date": "2024-06-30", "last_modified_date": "2024-05-08"}, "hash": "c41d7adffa6021cc903531735b7eb3c9ad0fadff2c73795cf199ac91d5a17cf3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e55ba469-f27e-4177-9189-2fee5468e101", "node_type": "1", "metadata": {"page_label": "6", "file_name": "AComparativeStudyofOperatingSystemsCaseof.pdf", "file_path": "C:\\Myfiles\\Github Repositories\\AI-projects\\langGraph\\Minimal-Tutor-AI\\data\\AComparativeStudyofOperatingSystemsCaseof.pdf", "file_type": "application/pdf", "file_size": 455153, "creation_date": "2024-06-30", "last_modified_date": "2024-05-08"}, "hash": "e08e2c07183e9354a5ec1560ab9b3e928d37dc3536414baac6089cfefebcab7c", "class_name": "RelatedNodeInfo"}}, "text": "These explain a great detail of what an Apps Graphical User \nInterface is supposed to depict with its expected behavior. \nOne major idea the Mac Interface Guidelines is that \neverything should stay where they are kept . \nMac operating system apps is termed not huge monoliths. The \nsystem's graphic us er interface (GUI) support program \ninstructions or codes, which is partly implemented in a ROM \nconveyed with the hardware and partly implemented in shared \nlibraries, communicates easily with Mac OS software \nprograms through a quite stable event interface. Hence, the \noperating system design encourages a distinct and clean \nseparation between GUI interface and application engine.  \nLeading -edge Unix\u2019s  like Linux OS are beginning to borrow \nideas like file attributes from Mac OS . \n4.4.1 Merits of Mac OS  \ni. Viruses: Ap ple Macs get almost no viruses. This is \nbecause Windows has a very large and superior \nmarket share over other OS.  \nii. Reliability: Apple computers offers itself for Macs \nto run only on it, and hence less prone to crashing of \nhardware and software.  \niii. Looks: ofte n time, Mac seems to look better than its \ncounterpart, windows OS.  \n4.4.2 Demerits of Mac OS  \ni. Expensive: The cost of purchase of Mac is more \nthan that of Windows.  \nii. Only available on Apple computers:  Already having \na computer system that is not an Apple, one will not \nbe able to install MAC in such system. Otherwise, \none will need to purchase a new computer system.  \niii. Compatibility:  Very few programs can only run on \nMAC OS, likewise computer games.  \n4.5 Android Operating System  \nThe original creator of the platform is Android Inc. , Google \nlater bought it over and released the OS as AOSP ( Android \nOpen Source Project ) in 2007. This new development was \ncomplemented by the founding of the OHA ( Open Handset \nAlliance ), a consortium saddled with the responsibility to \ndevelop a nd distribute Android. The software, which is now \nbeen  released under the Apache license is tagged among \nothers, a free open source license. Android releases a new \nversion every few months as a result of the available huge \ndeveloper communities who regularly updates and create \napplications using  custom -built version of Java . \nThe OHA group is a consortium of several software, hardware \nand telecom companies, T -Mobile, Intel, Qualcomm, \nNVIDIA, HTC, Motorola and Google Inc., for which Android \nprovides their software platform. Their  main objective of \nOHA is to deve lop available technologies  that will \nconsiderably lower the cost and time of developing and \ndistributing mobile devices and services.", "mimetype": "text/plain", "start_char_idx": 3463, "end_char_idx": 6101, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5c15191d-ea9c-4aa8-b3cd-da8cc5981066": {"__data__": {"id_": "5c15191d-ea9c-4aa8-b3cd-da8cc5981066", "embedding": null, "metadata": {"page_label": "7", "file_name": "AComparativeStudyofOperatingSystemsCaseof.pdf", "file_path": "C:\\Myfiles\\Github Repositories\\AI-projects\\langGraph\\Minimal-Tutor-AI\\data\\AComparativeStudyofOperatingSystemsCaseof.pdf", "file_type": "application/pdf", "file_size": 455153, "creation_date": "2024-06-30", "last_modified_date": "2024-05-08"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "85fc1ff4-efe7-415b-b3c3-442fc7170662", "node_type": "4", "metadata": {"page_label": "7", "file_name": "AComparativeStudyofOperatingSystemsCaseof.pdf", "file_path": "C:\\Myfiles\\Github Repositories\\AI-projects\\langGraph\\Minimal-Tutor-AI\\data\\AComparativeStudyofOperatingSystemsCaseof.pdf", "file_type": "application/pdf", "file_size": 455153, "creation_date": "2024-06-30", "last_modified_date": "2024-05-08"}, "hash": "b42d2271472df30af16b9f79412368b62814b49e6f94afef11dcf9695676b458", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5290682c-f867-4fc1-987c-92db3a44f13c", "node_type": "1", "metadata": {}, "hash": "d7d67a9dcf8300e98cd357aaab4ebd88476c416b4ff7017f3ed87c48023d7c53", "class_name": "RelatedNodeInfo"}}, "text": "International Journal of Computer Applications (0975 \u2013 8887)  \nVolume 176 \u2013 No. 39, July 2020  \n23 4.5.1 Merits of Android OS  \ni. Open Source Platform supported by a wide -range of \nmobile device manufacturer and communities  \nii. Easy access to many free and premium app from \ncommunities of Apps developers that support \nAndroid OS  \niii. Multitasking: Android Operating system has the \ncapability of running many applications and \nprocesses within  the same available time  \niv. Fast and easy notificati on of SMS, email  or RSS \nreader alert  \nv. Widget zed home screen  allows easy access to \nsettings of phones without wasting time and with \nease \nvi. The continuous upgrades in appearance and features \nmight shortly leave other iOS far behind soon.  \nvii. Good for programmers w ho likes to jumble with \nLinux Kernel for making alterations in OS.  \n4.5.2  Demerits of Android OS  \ni. Unstable and disposed to crashes compared to other \nOS. \nii. Being open source, so many apps are created. Very \nfew of these applications  might have bugs which \ncan be abused by hackers or viral infections.  \niii. To sign in as administrator for advanced settings, \none need to get acquainted  with Linux commands.  \niv. Frequent updates on the OS could make o ne \nupgrade to the latest, and this is called root ing. \nRooting should be done carefully, otherwise, one \ncould end up in trouble.  \nv. Majority of Applications require internet \nconnections for operation which sometimes is a \ndisadvantage.  \nvi. Poor battery backup management.  \n4.6  iPhone Operatin g System ( iOS) \niOS, which  is a mobile OS, is designed and owned by Apple \nInc. It was designed and developed for iPhone, but later \nextended support for iPad and Apple TV. iOS root comes \nfrom Mac OS X, hence it is UNIX based OS. Like other OS, \niOS is frequently updated starting from  iOS version 4.0 and \nthe latest is iOS version 5.1.The Core OS layer resides in the \nbottom of iPhone OS architecture [19]. \nCore services layer of iOS architecture encompasses an \nadditional abstraction  layer, cocoa touch layer and media. The \nCore OS layer contain the scheduler inclusively, Mach kernel, \nfile system , hardware drivers and control the memory system, \nnetwork and inter process communication and  security \nframework to secure the system and program data. As \nconfirmed that the core services layer of the OS has an  \nabstraction setup. It also contain nonstop acc essibility to the \nnetwork availability, basic framework for objective -C \nprogramming, state of mobile device, access to location \ninformation and address book. As of March 2012, 550,000 \niOS apps are available in Apple store  (Anup, Raman  et al \n2015). iOS has many benefits and non-benefits as  stated \nbelow.  4.6.1 Merits of iOS \ni. Stable and safe Operating System for mobile phones  \nii. Probably the most loved interface for any mobile \nOS in the market. Good looking designed desktop \nand app icons which go hand to h and with the \nstunning looks of Apple devices.  \niii. Minimal viruses and safe OS with the consideration \nof very high standard when applications were \ndeveloped and when updates were also made.  \niv. High adherence to current web standard and \nprocedures.  \nv. High consideration for cloud storage technology.  \nvi. Easy access to free and premium apps from Apple \nstore.  \n4.6.2 Demerits of iOS \ni. iOS only support Apple Hardware, and less \noperability  \nii. Very costly  \n5. DEDUCTIONS  \na. Windows 10 had 0.04 malware file present while \nWindows 7 machine was 0.08.  \nb. Higher % of mobile malware target Androids than \niOS.  \nc. Windows 10, Linux, UNIX and Mac OS are more \nsecured and reliable.  \nd. Windows and Android are more popular, user -\nfriendly, easy t o use and allow more application \nprogram than Mac OS.  \ne. Linux and Android are free while Windows is \nmoderately costly and Mac OS highly costly.  \nf. Except for Mac and iOS others allow compatibility. \nWindows 10 and Mac OS integrated firewall.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 3978, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5290682c-f867-4fc1-987c-92db3a44f13c": {"__data__": {"id_": "5290682c-f867-4fc1-987c-92db3a44f13c", "embedding": null, "metadata": {"page_label": "7", "file_name": "AComparativeStudyofOperatingSystemsCaseof.pdf", "file_path": "C:\\Myfiles\\Github Repositories\\AI-projects\\langGraph\\Minimal-Tutor-AI\\data\\AComparativeStudyofOperatingSystemsCaseof.pdf", "file_type": "application/pdf", "file_size": 455153, "creation_date": "2024-06-30", "last_modified_date": "2024-05-08"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "85fc1ff4-efe7-415b-b3c3-442fc7170662", "node_type": "4", "metadata": {"page_label": "7", "file_name": "AComparativeStudyofOperatingSystemsCaseof.pdf", "file_path": "C:\\Myfiles\\Github Repositories\\AI-projects\\langGraph\\Minimal-Tutor-AI\\data\\AComparativeStudyofOperatingSystemsCaseof.pdf", "file_type": "application/pdf", "file_size": 455153, "creation_date": "2024-06-30", "last_modified_date": "2024-05-08"}, "hash": "b42d2271472df30af16b9f79412368b62814b49e6f94afef11dcf9695676b458", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5c15191d-ea9c-4aa8-b3cd-da8cc5981066", "node_type": "1", "metadata": {"page_label": "7", "file_name": "AComparativeStudyofOperatingSystemsCaseof.pdf", "file_path": "C:\\Myfiles\\Github Repositories\\AI-projects\\langGraph\\Minimal-Tutor-AI\\data\\AComparativeStudyofOperatingSystemsCaseof.pdf", "file_type": "application/pdf", "file_size": 455153, "creation_date": "2024-06-30", "last_modified_date": "2024-05-08"}, "hash": "3b66111dd4e6e0192c4326d11c42931eb10e5357cc890f9e84e3d61d2a33f14e", "class_name": "RelatedNodeInfo"}}, "text": "v. High consideration for cloud storage technology.  \nvi. Easy access to free and premium apps from Apple \nstore.  \n4.6.2 Demerits of iOS \ni. iOS only support Apple Hardware, and less \noperability  \nii. Very costly  \n5. DEDUCTIONS  \na. Windows 10 had 0.04 malware file present while \nWindows 7 machine was 0.08.  \nb. Higher % of mobile malware target Androids than \niOS.  \nc. Windows 10, Linux, UNIX and Mac OS are more \nsecured and reliable.  \nd. Windows and Android are more popular, user -\nfriendly, easy t o use and allow more application \nprogram than Mac OS.  \ne. Linux and Android are free while Windows is \nmoderately costly and Mac OS highly costly.  \nf. Except for Mac and iOS others allow compatibility. \nWindows 10 and Mac OS integrated firewall.  \ng. The comparative a nalysis and market share analysis \nbetween August 2018 and June 2020 showed that \nAndroid and Windows OS are very high compare to \nother OS. Android and Windows has 38.3% and \n36.55% respectively  (See Table 2)   \nTable 2. Operatin g System Market Share Worldwide  \n(gs.statcounter) [20] \nOperatin g System s August 2018  \n(%) June 2020  \n(%) \nAndroid  41.8 38.3 \nWindows  35.8 36.55  \niOS 13.49  14.3 \nOS X (UNIX)  5.45 8.35 \nLinux  0.77 0.88 \nOther 1.74 1.83", "mimetype": "text/plain", "start_char_idx": 3220, "end_char_idx": 4462, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e1cca96b-1774-40ee-a952-c0704aa544e5": {"__data__": {"id_": "e1cca96b-1774-40ee-a952-c0704aa544e5", "embedding": null, "metadata": {"page_label": "8", "file_name": "AComparativeStudyofOperatingSystemsCaseof.pdf", "file_path": "C:\\Myfiles\\Github Repositories\\AI-projects\\langGraph\\Minimal-Tutor-AI\\data\\AComparativeStudyofOperatingSystemsCaseof.pdf", "file_type": "application/pdf", "file_size": 455153, "creation_date": "2024-06-30", "last_modified_date": "2024-05-08"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d29792e2-2619-452b-97e7-282e9368e7df", "node_type": "4", "metadata": {"page_label": "8", "file_name": "AComparativeStudyofOperatingSystemsCaseof.pdf", "file_path": "C:\\Myfiles\\Github Repositories\\AI-projects\\langGraph\\Minimal-Tutor-AI\\data\\AComparativeStudyofOperatingSystemsCaseof.pdf", "file_type": "application/pdf", "file_size": 455153, "creation_date": "2024-06-30", "last_modified_date": "2024-05-08"}, "hash": "f25f2a954745a474f99569a06ea80e9f4eeaa7bcc166ad33eb0379b608391cb7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e450aed1-084c-4aaa-9ee3-196d0c0f8804", "node_type": "1", "metadata": {}, "hash": "9e41e06da77f96c92651871a2e08280a364a85c368b8cdbdd44c24b83e6ae55e", "class_name": "RelatedNodeInfo"}}, "text": "International Journal of Computer Applications (0975 \u2013 8887)  \nVolume 176 \u2013 No. 39, July 2020  \n24 6. CONCLUSION  \nWindows and Android tend to be the most widely used \nespecially the newest versions. It is because they are \naffordable, secure d, reliable, compatible and friendly.  It could \nbe concluded that every operating system, with a particular \ndirection, was developed by considering targeted customers \nand their interest. Every Operating System, mobile OS \ninclusive, provides competitive and distinct features and \nservices for their customers. However, all open sourced \nOperating Systems enjoys addition of new ideas, in \napplications and updates every day by  various community \ndevelopers, this also enhanced their security features and \nperformance, while the enterprise d OS lacks flexibility of \ndesign.  This will not underscore the fact that every OS is \ngood, but users\u2019 choice depends on the services required of it.   \n7. ACKNOWLEEMENT  \nThanks to everyone w ho contributed to t he completion of t his \nresearch work especially Prof B. Akinnuwesi.  \n8. REFERENCES  \n[1] A. Silberschatz, P. B. Galvin, and G. Gagne, Operating \nSystem Concept, S. Ken, ed., pp. 1 -3, USA: John Wiley \n& Son Inc., 2009.  \n[2] F. Lin, and W. Ye, \u201cOperating system battle in the \necosystem of smartphone industry,\u201d in 2009 international \nsymposium on information engineering and electronic \ncommerce, 2009, pp. 617 -621. \n[3] T. V. Chien, H. N. Chan, and T. N. Huu, \u201cA comparative \nstudy on operating system for wireless sensor networks,\u201d \nin 2011 International Conference on Advanced Computer \nScience and Information Systems, 2011, pp. 73 -78. \n[4] A. R. Mudiraj, \u201cWindows, Linux and Mac Ope rating \nsystem Booting Process: a Comparative Study,\u201d \nInternational Journal of Research in Computer and \nCommunication Technology, vol. 2, no. 11, pp. 2278 -\n5841, 2013.  \n[5] T. Sharma, M. K. Beniwal, and A. Sharma, \n\u201cComparative study of different mobile operating \nsystems,\u201d International Journal of Advancements in \nResearch & Technology, vol. 2, no. 3, pp. 1 -5, 2013.  \n[6] M. S. Ahmad, N. E. Musa, R. Nadarajah, R. Hassan, and \nN. E. Othman, \u201cComparison between android and iOS \nOperating System in terms of security,\u201d in 2013 8th \nInternational Conference on Information Technology in \nAsia (CITA), 2013, pp. 1 -4. \n[7] O. Okediran, O. Arulogun, R. Ganiyu, and C. Oyeleye, \n\u201cMobile operating systems and application development \nplatforms: A survey,\u201d International journal of advanced \nnetwork ing and applications, vol. 6, no. 1, pp. 2195 -\n2201, 2014.  \n[8] C.-F. Chien, K. -Y. Lin, and A. P. -I. Yu, \u201cUser -\nexperience of tablet operating system: An experimental \ninvestigation of Windows 8, iOS 6, and Android 4.2,\u201d \nComputers & Industrial Engineering, vol. 73 , no. 1, pp. \n75-84, 2014.  [9] P. Kaur, and S. Sharma, \u201cGoogle Android a mobile \nplatform: A review,\u201d in 2014 Recent Advances in \nEngineering and Computational Sciences (RAECS), \n2014, pp. 1 -5. \n[10] D. Patil, and B. Meshram, \u201cForensic investigation of user \nactivities o n Windows7 and Ubuntu12 operating \nsystem,\u201d International Journal of Innovations in \nEngineering and Technology, vol. 5, no. 3, pp. 58 -66, \n2015.  \n[11] V. Rema, and M. KirthiVasan, \u201cDeterminants affecting \nthe choice of Mobile Operating System among \nSmartphone Users : A Comparative study of Android vs. \niOS in Bangalore,\u201d Management Review -A Research & \nAcademic Journal of Business Management, vol. 6, no.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 3456, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e450aed1-084c-4aaa-9ee3-196d0c0f8804": {"__data__": {"id_": "e450aed1-084c-4aaa-9ee3-196d0c0f8804", "embedding": null, "metadata": {"page_label": "8", "file_name": "AComparativeStudyofOperatingSystemsCaseof.pdf", "file_path": "C:\\Myfiles\\Github Repositories\\AI-projects\\langGraph\\Minimal-Tutor-AI\\data\\AComparativeStudyofOperatingSystemsCaseof.pdf", "file_type": "application/pdf", "file_size": 455153, "creation_date": "2024-06-30", "last_modified_date": "2024-05-08"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d29792e2-2619-452b-97e7-282e9368e7df", "node_type": "4", "metadata": {"page_label": "8", "file_name": "AComparativeStudyofOperatingSystemsCaseof.pdf", "file_path": "C:\\Myfiles\\Github Repositories\\AI-projects\\langGraph\\Minimal-Tutor-AI\\data\\AComparativeStudyofOperatingSystemsCaseof.pdf", "file_type": "application/pdf", "file_size": 455153, "creation_date": "2024-06-30", "last_modified_date": "2024-05-08"}, "hash": "f25f2a954745a474f99569a06ea80e9f4eeaa7bcc166ad33eb0379b608391cb7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e1cca96b-1774-40ee-a952-c0704aa544e5", "node_type": "1", "metadata": {"page_label": "8", "file_name": "AComparativeStudyofOperatingSystemsCaseof.pdf", "file_path": "C:\\Myfiles\\Github Repositories\\AI-projects\\langGraph\\Minimal-Tutor-AI\\data\\AComparativeStudyofOperatingSystemsCaseof.pdf", "file_type": "application/pdf", "file_size": 455153, "creation_date": "2024-06-30", "last_modified_date": "2024-05-08"}, "hash": "71754bf8e05437131eadceac10cc0d98303ab5e98b531483a2a1574f0c5a042b", "class_name": "RelatedNodeInfo"}}, "text": "75-84, 2014.  [9] P. Kaur, and S. Sharma, \u201cGoogle Android a mobile \nplatform: A review,\u201d in 2014 Recent Advances in \nEngineering and Computational Sciences (RAECS), \n2014, pp. 1 -5. \n[10] D. Patil, and B. Meshram, \u201cForensic investigation of user \nactivities o n Windows7 and Ubuntu12 operating \nsystem,\u201d International Journal of Innovations in \nEngineering and Technology, vol. 5, no. 3, pp. 58 -66, \n2015.  \n[11] V. Rema, and M. KirthiVasan, \u201cDeterminants affecting \nthe choice of Mobile Operating System among \nSmartphone Users : A Comparative study of Android vs. \niOS in Bangalore,\u201d Management Review -A Research & \nAcademic Journal of Business Management, vol. 6, no. \n2, pp. 22 -26, 2015.  \n[12] N. Ahmad, M. W. Boota, and A. H. Masoom, \n\u201cComparative analysis of operating system of different \nsmart phones,\u201d Journal of Software Engineering and \nApplications, vol. 8, no. 03, pp. 114 -126, 2015.  \n[13] A. Fernandes, and J. Tribolet, \u201cEnterprise Operating \nSystem: the enterprise (self) governing system,\u201d Procedia \nComputer Science, vol. 164, no. 1, pp. 149 -158, 2019.  \n[14] R. Kouki, A. Boe, T. Vantroys, and F. Bouani, \n\u201cAutonomous Internet of Things predictive control \napplication based on wireless networked multi -agent \ntopology and embedded operating system,\u201d Proceedings \nof the Institution of Mechanical Engineers, Pa rt I: \nJournal of Systems and Control Engineering, vol. 234, \nno. 5, pp. 577 -595, 2020.  \n[15] H. Nair, and R. Sridaran, \u201cAn Innovative Model (HS) to \nEnhance the Security in Windows Operating System -A \nCase Study,\u201d in 2019 6th International Conference on \nComputing f or Sustainable Global Development \n(INDIACom), 2019, pp. 1207 -1211.  \n[16] M. M. Chim, M. V. Rathod, and M. P. Chawan, \u201cLinux \n& Windows Operating Systems,\u201d Journal of Engineering, \nComputers & Applied Sciences (JEC&AS), vol. 2, no. 6, \npp. 15 -20, 2013.  \n[17] J. Viega, and  J. Voas, \u201cThe pros and cons of Unix and \nWindows security policies,\u201d IT Professional, vol. 2, no. \n5, pp. 40 -47, 2000.  \n[18] W.-C. Fan, C. -S. Wong, W. -K. Lee, and S. -O. Hwang, \n\u201cComparison of Interactivity Performance of Linux CFS \nand Windows 10 CPU Schedulers,\u201d i n 2020 International \nConference on Green and Human Information \nTechnology (ICGHIT), 2020, pp. 31 -34. \n[19] A. Naseer, W. B. Muhammad, and H. M. Abdul, \n\u201cComparative Analysis of Operating System of Different \nSmart Phones,\u201d Journal of Software Engineering and \nAppli cations, vol. Vol.8 no. No.3, pp. 114 -126, March \n2015, 2015.  \n[20] Https://gs.statcounter.com/os -market -share \n \nIJCATM : www.ijcaonline.org", "mimetype": "text/plain", "start_char_idx": 2784, "end_char_idx": 5355, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}}, "docstore/ref_doc_info": {"0a8ffe42-7dc9-4f12-a3fe-bb98a6e67a42": {"node_ids": ["1c22a98b-8a38-4829-b4d9-5670ef600369", "950a75c2-68fc-4479-b7cc-4061e5db3209"], "metadata": {"page_label": "1", "file_name": "AComparativeStudyofOperatingSystemsCaseof.pdf", "file_path": "C:\\Myfiles\\Github Repositories\\AI-projects\\langGraph\\Minimal-Tutor-AI\\data\\AComparativeStudyofOperatingSystemsCaseof.pdf", "file_type": "application/pdf", "file_size": 455153, "creation_date": "2024-06-30", "last_modified_date": "2024-05-08"}}, "7a9e1cf4-6ebe-4746-870f-4c19ebba7622": {"node_ids": ["d5d47873-d792-45d1-9ff1-1d71c2123888", "b8654cae-5b31-43fa-8a8f-1f569822bf28"], "metadata": {"page_label": "2", "file_name": "AComparativeStudyofOperatingSystemsCaseof.pdf", "file_path": "C:\\Myfiles\\Github Repositories\\AI-projects\\langGraph\\Minimal-Tutor-AI\\data\\AComparativeStudyofOperatingSystemsCaseof.pdf", "file_type": "application/pdf", "file_size": 455153, "creation_date": "2024-06-30", "last_modified_date": "2024-05-08"}}, "b069dd48-da1b-4911-be1e-12b268aa71a6": {"node_ids": ["cb771808-42f7-4472-b08d-4d712f787a76", "cbd6fdf4-8c3c-41e2-a9b3-14f0367c2be6"], "metadata": {"page_label": "3", "file_name": "AComparativeStudyofOperatingSystemsCaseof.pdf", "file_path": "C:\\Myfiles\\Github Repositories\\AI-projects\\langGraph\\Minimal-Tutor-AI\\data\\AComparativeStudyofOperatingSystemsCaseof.pdf", "file_type": "application/pdf", "file_size": 455153, "creation_date": "2024-06-30", "last_modified_date": "2024-05-08"}}, "78e0f7a7-4682-4b09-877c-9556a832a7ca": {"node_ids": ["b61496d8-de5b-4259-b5ae-bfc7c968f8dc"], "metadata": {"page_label": "4", "file_name": "AComparativeStudyofOperatingSystemsCaseof.pdf", "file_path": "C:\\Myfiles\\Github Repositories\\AI-projects\\langGraph\\Minimal-Tutor-AI\\data\\AComparativeStudyofOperatingSystemsCaseof.pdf", "file_type": "application/pdf", "file_size": 455153, "creation_date": "2024-06-30", "last_modified_date": "2024-05-08"}}, "c44edcf5-dfc9-4db8-b7d5-d1cc2950f0b5": {"node_ids": ["cf9df755-a925-49a8-b655-037d47c52ef5", "96d67fc8-5880-4b0c-a912-54e7bb2f0ad9"], "metadata": {"page_label": "5", "file_name": "AComparativeStudyofOperatingSystemsCaseof.pdf", "file_path": "C:\\Myfiles\\Github Repositories\\AI-projects\\langGraph\\Minimal-Tutor-AI\\data\\AComparativeStudyofOperatingSystemsCaseof.pdf", "file_type": "application/pdf", "file_size": 455153, "creation_date": "2024-06-30", "last_modified_date": "2024-05-08"}}, "99266da1-98e6-43cf-826d-ef15db464f16": {"node_ids": ["e55ba469-f27e-4177-9189-2fee5468e101", "731a08cc-6369-4536-805d-15d9e784418b"], "metadata": {"page_label": "6", "file_name": "AComparativeStudyofOperatingSystemsCaseof.pdf", "file_path": "C:\\Myfiles\\Github Repositories\\AI-projects\\langGraph\\Minimal-Tutor-AI\\data\\AComparativeStudyofOperatingSystemsCaseof.pdf", "file_type": "application/pdf", "file_size": 455153, "creation_date": "2024-06-30", "last_modified_date": "2024-05-08"}}, "85fc1ff4-efe7-415b-b3c3-442fc7170662": {"node_ids": ["5c15191d-ea9c-4aa8-b3cd-da8cc5981066", "5290682c-f867-4fc1-987c-92db3a44f13c"], "metadata": {"page_label": "7", "file_name": "AComparativeStudyofOperatingSystemsCaseof.pdf", "file_path": "C:\\Myfiles\\Github Repositories\\AI-projects\\langGraph\\Minimal-Tutor-AI\\data\\AComparativeStudyofOperatingSystemsCaseof.pdf", "file_type": "application/pdf", "file_size": 455153, "creation_date": "2024-06-30", "last_modified_date": "2024-05-08"}}, "d29792e2-2619-452b-97e7-282e9368e7df": {"node_ids": ["e1cca96b-1774-40ee-a952-c0704aa544e5", "e450aed1-084c-4aaa-9ee3-196d0c0f8804"], "metadata": {"page_label": "8", "file_name": "AComparativeStudyofOperatingSystemsCaseof.pdf", "file_path": "C:\\Myfiles\\Github Repositories\\AI-projects\\langGraph\\Minimal-Tutor-AI\\data\\AComparativeStudyofOperatingSystemsCaseof.pdf", "file_type": "application/pdf", "file_size": 455153, "creation_date": "2024-06-30", "last_modified_date": "2024-05-08"}}}}